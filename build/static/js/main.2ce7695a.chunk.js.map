{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","redux/reducer.js","redux/store.js","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/memoryUtils.js","utils/dateUtils.js","components/header/index.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","pages/product/home.jsx","pages/product/rich-editor.jsx","pages/product/add-update.jsx","pages/product/update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/order/home.jsx","pages/order/detail.jsx","pages/order/order.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png","assets/images/beian.png"],"names":["storageUtils","user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","initUser","get","combineReducers","headTitle","state","arguments","length","undefined","action","type","data","errorMsg","Object","objectSpread2","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","contentType","Promise","resolve","reject","newParams","URLSearchParams","key","append","axios","params","post","then","response","catch","error","message","reqLogin","userName","password","reqCategorys","pageNum","pageSize","reqCategorys2","reqAddCategory","reqUpdateCategory","reqDeleteCategory","id","reqAddProduct","reqUpdateProduct","reqDeleteProduct","reqProducts","reqUpdateStatus","ids","sellStatus","reqSearchProducts","_ref","keyword","orderby","categoryId","reqOrders","reqOrderDetail","orderNo","reqSearchOrders","reqOrderDelivery","reqOrderEnd","setHeadTitle","receiveUser","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","err","values","wrap","_context","prev","next","login","stop","_x","_x2","apply","this","_this2","getFieldDecorator","success","react_default","createElement","react_router","to","className","src","logo","alt","es_form","onSubmit","Item","rules","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","es_button","htmlType","Component","WrapLogin","create","connect","dispatch","result","msg","sent","status","menuList","title","isPublic","children","SubMenu","menu","LeftNav","getMenuNodes_map","map","item","getMenuNodes","react_router_dom","path","location","pathname","reduce","pre","find","cItem","indexOf","openKey","push","onClick","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","memoryUtils","product","order","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getTitle","forEach","logout","modal","confirm","content","onOk","clearInterval","username","Line","dv","DataSet","createView","source","month","2020","2021","2022","transform","fields","value","float","width","marginTop","BizCharts","height","scale","range","forceFit","name","label","formatter","val","concat","crosshairs","position","size","shape","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","card","extra","defaultValue","moment","format","bodyStyle","padding","bar_Bar","line_Line","timeline","AddForm","es_select","Option","setForm","_this$props","categorys","parentId","initialValue","add_form","UpdateForm","orderNum","update_form_Item","update_form","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","render","updateTime","substring","category","showUpdate","deleteCategory","getCategorys","i","list","showSubCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","_ref2","_callee2","_context2","_x3","_x4","updateCategory","_ref3","_callee3","_context3","_x5","_x6","_onOk","_callee4","_context4","parseInt","_this$state","marginRight","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","categoryName","PAGE_SIZE","ProductHome","total","products","price","newStatus","updateStatus","showDetail","deleteProduct","history","getProducts","_result$data","current","onChange","RichEditor","classCallCheck","_super","call","receiveHtml","responseList","detailContent","uploadProps","listType","fileList","file","multiple","beforeUpload","showUploadList","react_lz_editor_default","active","cbReceiver","TreeNode","ProductAddUpdate","TextArea","loadCategoryList","res","tree","selectChange","onName","e","target","onPrice","onPieces","stock","uploadImg","obj","_file$response","image","getSubImagesString","subImages","uri","join","getImageLocation","detailChange","detail","info","categoryList","defaultFileList","fontSize","goBack","row","col","span","tree_select","showSearch","allowClear","treeDefaultExpandAll","childCategory","item2","item3","addonAfter","upload","rich_editor","offset","PureComponent","ProductUpdate","update_TreeNode","es_list","ProductDetail","_memoryUtils$product","detail_Item","dangerouslySetInnerHTML","__html","Product","component","exact","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","itemStyle","normal","getOption2","trigger","axisPointer","grid","left","right","bottom","containLabel","stack","show","lib_default","option","Pie","subtext","x","orient","radius","avoidLabelOverlap","emphasis","fontWeight","labelLine","NotFound","goHome","replace","OrderHome","orders","searchContent","searchType","totalPrice","paymentType","createTime","showDelivery","showEnd","getOrders","_onOk2","_this$state2","home_Option","margin","OrderDetail","_requestOrderDetail","productList","Array","from","orderItemVOList","productImg","orderInfo","unitPrice","receiverName","receiverMobile","receiverAddress","orderStatusName","Order","Footer","Sider","Content","Admin","layout","minHeight","components_left_nav","components_header","backgroundColor","textAlign","href","display","line-height","beianImg","App","ReactDOM","es","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2ce7695a.chunk.js","sourcesContent":["/*\n进行local数据存储管理的工具模块\n */\nimport store from 'store'\nconst USER_KEY = 'user_key'\nexport default {\n  /*\n  保存user\n   */\n  saveUser (user) {\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\n    store.set(USER_KEY, user)\n  },\n\n  /*\n  读取user\n   */\n  getUser () {\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\n    return store.get(USER_KEY) || {}\n  },\n\n  /*\n  删除user\n   */\n  removeUser () {\n    // localStorage.removeItem(USER_KEY)\n    store.remove(USER_KEY)\n  }\n}","/*\n包含n个action的type常量标识名称的模块\n */\nexport const SET_HEAD_TITLE = 'set_head_title' // 设置头部标题\nexport const RECEIVE_USER = 'receive_user'  // 接收用户信息\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\nexport const RESET_USER = 'reset_user' // 重置用户信息","\n/*\n用来根据旧的state和指定的action生成并返回新的state的函数\n */\nimport {combineReducers} from 'redux'\n\n/*\n用来管理头部标题的reducer函数\n */\nimport storageUtils from \"../utils/storageUtils\"\nimport {\n  SET_HEAD_TITLE,\n  RECEIVE_USER,\n  SHOW_ERROR_MSG,\n  RESET_USER\n} from './action-types'\n\nconst initHeadTitle = ''\n\nfunction headTitle(state = initHeadTitle, action) {\n  switch (action.type) {\n    case SET_HEAD_TITLE:\n      return action.data\n    default:\n      return state\n  }\n}\n\n/*\n用来管理当前登陆用户的reducer函数\n */\nconst initUser = storageUtils.getUser()\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case RECEIVE_USER:\n      return action.user\n    case SHOW_ERROR_MSG:\n      const errorMsg = action.errorMsg\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\n      return {...state, errorMsg}\n    case RESET_USER:\n      return {}\n    default:\n      return state\n  }\n}\n\n\nexport default combineReducers({\n  headTitle,\n  user\n})","/*\nredux最核心的管理对象store\n */\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nimport reducer from './reducer'\n\n// 向外默认暴露store\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","\nimport axios from 'axios'\nimport {message} from 'antd'\n\nexport default function ajax(url, data={}, type='GET',\n  contentType = 'application/x-www-form-urlencoded', //请求头内容类型 默认'application/json'\n) {\n\n  \n  return new Promise((resolve, reject) => {\n    let promise\n\n    if(\"application/x-www-form-urlencoded\" === contentType) {\n      //FORM表单提交，需转换参数,否则将报400 Bad request错误\n      let newParams  = new URLSearchParams();\n      for(let key in data) {\n          newParams.append(key,data[key])\n      }\n     data = newParams;\n   }\n\n    // 1. 执行异步ajax请求\n    if(type==='GET') { // 发GET请求\n      promise = axios.get(url, { // 配置对象\n        params: data // 指定请求参数\n      })\n    } else { // 发POST请求\n      promise = axios.post(url, data)\n    //  //console.log(\"post请求的参数为\",data)\n  \n    }\n    // 2. 如果成功了, 调用resolve(value)\n    promise.then(response => {\n      resolve(response.data)\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\n    }\n    ).catch((error) => {\n      message.error('请求出错了: ' + error.message)\n    })\n  })\n}","/*\n要求: 能根据接口文档定义接口请求\n包含应用中所有接口请求函数的模块\n每个函数的返回值都是promise\n\n基本要求: 能根据接口文档定义接口请求函数\n */\nimport jsonp from 'jsonp'\nimport {message} from 'antd'\nimport ajax from './ajax'\n\nconst BASE = ''\n// 登陆\n\nexport const reqLogin = (userName, password) => ajax('/adminLogin', {userName, password},'POST')\n\n// 获取一级/二级分类的列表\nexport const reqCategorys = (pageNum,pageSize) => ajax(BASE + '/admin/category/list', {pageNum,pageSize})\n\n//普通用户获取分类列表\nexport const reqCategorys2 = () => ajax(BASE + '/category/list')\n\n// 添加分类\nexport const reqAddCategory = params => ajax(BASE + '/admin/category/add', params, 'POST','application/json;charset=UTF-8')\n\n// 更新分类\nexport const reqUpdateCategory =  params => ajax(BASE + '/admin/category/update',  params, 'POST','application/json;charset=UTF-8')\n\n//删除分类\nexport const reqDeleteCategory = (id) => ajax(BASE + '/admin/category/delete', {id}, 'POST')\n\n//添加商品\nexport const reqAddProduct = params => ajax(BASE + '/admin/product/add',params, 'POST','application/json;charset=UTF-8')\n\n//修改商品信息\nexport const reqUpdateProduct = params => ajax(BASE + '/admin/product/update',params, 'POST','application/json;charset=UTF-8')\n\n//商品详情 前后台通用\nexport const reqProductDetail = params => ajax(BASE + '/product/detail',params,'GET');\n// 删除指定商品\nexport const reqDeleteProduct = (id) => ajax(BASE + '/admin/product/delete', {id}, 'POST')\n\n\n\n\n// 获取商品分页列表\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/admin/product/list', {pageNum, pageSize})\n\n// 更新商品的状态(上架/下架)\nexport const reqUpdateStatus = (ids, sellStatus) => ajax(BASE + '/admin/product/batchUpdateSellStatus', {ids, sellStatus}, 'POST')\n\n\n\n/*\n搜索商品分页列表 (根据商品名称/商品描述)\nsearchType: 搜索的类型, productName/productDesc\n */\nexport const reqSearchProducts = ({pageNum, pageSize, keyword, orderby,categoryId}) => ajax(BASE + '/product/list', {\n  pageNum,\n  pageSize,\n  keyword, orderby,categoryId\n})\n\n\n//管理员获取订单列表\nexport const reqOrders = (pageNum, pageSize) => ajax(BASE + '/admin/order/list', {pageNum, pageSize})\n\n//订单详情\nexport const reqOrderDetail = (orderNo) => ajax(BASE + '/order/detail',{orderNo})\n\nexport const reqSearchOrders = (pageNum, pageSize) => ajax(BASE + '/admin/order/list', {pageNum, pageSize})\n\n//订单发货\nexport const reqOrderDelivery = (orderNo) => ajax(BASE + '/admin/order/delivered',{orderNo},'POST')\n\n//订单完结\nexport const reqOrderEnd = (orderNo) => ajax(BASE + '/order/finish',{orderNo},'POST')","/*\n包含n个action creator函数的模块\n同步action: 对象 {type: 'xxx', data: 数据值}\n异步action: 函数  dispatch => {}\n */\nimport {\n  SET_HEAD_TITLE,\n  RECEIVE_USER,\n  SHOW_ERROR_MSG,\n  RESET_USER\n} from './action-types'\nimport { message } from 'antd'\nimport {reqLogin} from '../api'\nimport storageUtils from \"../utils/storageUtils\";\n\n/*\n设置头部标题的同步action\n */\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\n\n/*\n接收用户的同步action\n */\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\n\n/*\n显示错误信息同步action\n */\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\n\n/*  \n退出登陆的同步action\n */\nexport const logout = () =>  {\n  // 删除local中的user\n  storageUtils.removeUser()\n  // 返回action对象\n  return {type: RESET_USER}\n}\n\n/*\n登陆的异步action\n */\nexport const login = (userName, password) => {\n  return async dispatch => {\n    //console.log(userName,password)\n    // 1. 执行异步ajax请求\n    const result = await reqLogin(userName, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\n    //console.log(\"状态码\",result.status)\n    // 2.1. 如果成功, 分发成功的同步action\n    if(result.status===10000) {\n      const user = result.data\n      // 保存local中\n      storageUtils.saveUser(user)\n      // 分发接收用户的同步action\n      dispatch(receiveUser(user))\n    } else { // 2.2. 如果失败, 分发失败的同步action\n      const msg = result.msg\n      message.error(msg)\n      // dispatch(showErrorMsg(msg))\n    }\n\n  }\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {\n  Form,\n  Icon,\n  Input,\n  Button,\n  message\n} from 'antd'\nimport { connect } from 'react-redux'\n\nimport './login.less'\nimport logo from '../../assets/images/logo.png'\nimport { login } from '../../redux/actions'\n\n// const Item = Form.Item // 不能写在import之前\n\n/*\n登陆的路由组件\n */\nclass Login extends Component {\n\n  \n  handleSubmit = (event, user) => {\n\n    // //console.log(user)\n    // 阻止事件的默认行为\n    event.preventDefault()\n\n    // 对所有表单字段进行检验\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        //console.log('提交登陆的ajax请求', values)\n        // 请求登陆\n        // const { userName, password } = values\n\n        // 调用分发异步action的函数 => 发登陆的异步请求, 有了结果后更新状态\n        this.props.login(values.userName, values.password);\n       \n      } else {\n        // //console.log('检验失败!')\n      }\n    });\n\n    // 得到form对象\n    // const form = this.props.form\n    // // 获取表单项的输入数据\n    // const values = form.getFieldsValue()\n    // //console.log('handleSubmit()', values)\n  }\n\n\n  render() {\n\n    // 得到具强大功能的form对象\n    const form = this.props.form\n    const { getFieldDecorator } = form;\n    // 如果用户已经登陆, 自动跳转到管理界面\n    const user = this.props.user\n    //console.log(user)\n    if (user && user.id) {\n      message.success(\"登录成功\")\n      return (<Redirect to='/home' />);\n    }\n    return ( \n      <div className=\"login\">\n        <header className=\"login-header\">\n          <img src={logo} alt=\"logo\" />\n          <h1>基于SpringCloud + React的社区电商后台管理系统</h1>\n        </header>\n        <section className=\"login-content\">\n          <h2>管理员登录</h2>\n          <Form onSubmit={(event) => { this.handleSubmit(event, user) }} className=\"login-form\">\n            {/* <Form onSubmit={this.handleSubmit} className=\"login-form\"> */}\n            <Form.Item>\n              {\n                getFieldDecorator('userName', { // 配置对象: 属性名是特定的一些名称\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\n                  rules: [\n                    { required: true, whitespace: true, message: '用户名必须输入' },\n                    { min: 4, message: '用户名至少4位' },\n                    { max: 12, message: '用户名最多12位' },\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\n                  ],\n                  // initialValue: 'admin', // 初始值\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder=\"用户名\"\n                  />\n                )\n              }\n            </Form.Item>\n            <Form.Item>\n              {\n                getFieldDecorator('password', {\n                  rules: [\n                    { required: true, whitespace: true, message: '密码必须输入' },\n                    { min: 4, message: '密码至少8位' },\n                    { max: 12, message: '密码最多16位' },\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\n                  ]\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"密码\"\n                  />\n                )\n              }\n\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                登录\n              </Button>\n            </Form.Item>\n          </Form>\n        </section>\n      </div>\n      )\n    \n  }\n}\n\nconst WrapLogin = Form.create()(Login)\nexport default connect(\n  state => ({ user: state.user }),\n  { login }\n)(WrapLogin)\n\n","const menuList = [\n  {\n    title: '首页', // 菜单标题名称\n    key: '/home', // 对应的path\n    icon: 'home', // 图标名称\n    isPublic: true, // 公开的\n  },\n  {\n    title: '商品和分类管理',\n    key: '/products',\n    icon: 'appstore',\n    children: [ // 子菜单列表\n      {\n        title: '品类管理',\n        key: '/category',\n        icon: 'bars'\n      },\n      {\n        title: '商品管理',\n        key: '/product',\n        icon: 'shopping'\n      },\n    ]\n  },\n\n  {\n    title: '订单管理',\n    key: '/order',\n    icon: 'windows',\n  },\n]\n\nexport default menuList","import React, {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport {Menu, Icon} from 'antd'\nimport {connect} from 'react-redux'\n\nimport logo from '../../assets/images/logo.png'\nimport menuList from '../../config/menuConfig'\nimport './index.less'\nimport {setHeadTitle} from '../../redux/actions'\n\nconst SubMenu = Menu.SubMenu;\n\n/*\n左侧导航的组件\n */\nclass LeftNav extends Component {\n\n  /*\n  判断当前登陆用户对item是否有权限\n   */\n  // hasAuth = (item) => {\n  //   const {key, isPublic} = item\n\n  //  // const menus = this.props.user.role.menus\n  //   const userName = this.props.user.userName\n  //   /*\n  //   1. 如果当前用户是admin\n  //   2. 如果当前item是公开的\n  //   3. 当前用户有此item的权限: key有没有menus中\n  //    */\n  //   if(userName==='liulei') {   //||isPublic || menus.indexOf(key)!==-1\n  //     return true\n  //   } \n  //   // else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\n  //   //   return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\n  //   // }\n\n  //   return false\n  // }\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用map() + 递归调用\n  */\n  getMenuNodes_map = (menuList) => {\n    return menuList.map(item => {\n      if(!item.children) {\n        return (\n          <Menu.Item key={item.key}>\n            <Link to={item.key}>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </Link>\n          </Menu.Item>\n        )\n      } else {\n        return (\n          <SubMenu\n            key={item.key}\n            title={\n              <span>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </span>\n            }\n          >\n            {this.getMenuNodes(item.children)}\n          </SubMenu>\n        )\n      }\n\n    })\n  }\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用reduce() + 递归调用\n  */\n  getMenuNodes = (menuList) => {\n    // 得到当前请求的路由路径\n    const path = this.props.location.pathname\n\n    return menuList.reduce((pre, item) => {\n\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\n      if (1) {  //this.hasAuth(item)\n\n        // 向pre添加<Menu.Item>\n        if(!item.children) {\n          // 判断item是否是当前对应的item\n          if (item.key===path || path.indexOf(item.key)===0) {\n            // 更新redux中的headerTitle状态\n            this.props.setHeadTitle(item.title)\n          }\n\n          pre.push((\n            <Menu.Item key={item.key}>\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\n                <Icon type={item.icon}/>\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          ))\n        } else {\n          // 查找一个与当前请求路径匹配的子Item\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\n          // 如果存在, 说明当前item的子列表需要打开\n          if (cItem) {\n            this.openKey = item.key\n          }\n\n\n          // 向pre添加<SubMenu>\n          pre.push((\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </span>\n              }\n            >\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          ))\n        }\n      }\n\n      return pre\n    }, [])\n  }\n\n  /*\n  在第一次render()之前执行一次\n  为第一个render()准备数据(必须同步的)\n   */\n  componentWillMount () {\n    this.menuNodes = this.getMenuNodes(menuList)\n  }\n\n  render() {\n    // 得到当前请求的路由路径\n    let path = this.props.location.pathname\n    ////console.log('render()', path)\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\n      path = '/product'\n    }\n\n    // 得到需要打开菜单项的key\n    const openKey = this.openKey\n\n    return (\n      <div className=\"left-nav\">\n        <Link to='/' className=\"left-nav-header\">\n          <img src={logo} alt=\"logo\"/>\n          <h1>社区电商后台管理系统</h1>\n        </Link>\n\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          selectedKeys={[path]}\n          defaultOpenKeys={[openKey]}\n        >\n          {\n            this.menuNodes\n          }\n        </Menu>\n      </div>\n    )\n  }\n}\n\n/*\nwithRouter高阶组件:\n包装非路由组件, 返回一个新的组件\n新的组件向非路由组件传递3个属性: history/location/match\n */\nexport default connect(\n  state => ({user: state.user}),\n  {setHeadTitle}\n)(withRouter(LeftNav))","import React from 'react'\n\nimport './index.less'\n/*\n外形像链接的按钮\n */\nexport default function LinkButton(props) {\n  return <button {...props} className=\"link-button\"></button>\n}","/*\n用来在内存保存一些数据的工具模块\n */\nexport default {\n  user: {}, // 保存当前登陆的user\n  product: {}, // 指定的商品对象\n  order:{},// 指定的订单\n}","/*\n包含n个日期时间处理的工具函数模块\n*/\n\n/*\n  格式化日期\n*/\nexport function formateDate(time) {\n  if (!time) return ''\n  let date = new Date(time)\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\n}","import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { Modal} from 'antd'\nimport {connect} from 'react-redux'\n\nimport LinkButton from '../link-button'\nimport menuList from '../../config/menuConfig'\nimport memoryUtils from '../../utils/memoryUtils'\nimport {formateDate} from '../../utils/dateUtils'\nimport './index.less'\nimport {logout} from '../../redux/actions'\n\n/*\n左侧导航的组件\n */\nclass Header extends Component {\n\n  \n  state = {\n    currentTime: formateDate(Date.now()), // 当前时间字符串\n  }\n\n  getTime = () => {\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\n    this.intervalId = setInterval(() => {\n      const currentTime = formateDate(Date.now())\n      this.setState({currentTime})\n    }, 1000)\n  }\n\n  \n\n  getTitle = () => {\n    // 得到当前请求路径\n    const path = this.props.location.pathname\n    let title\n    menuList.forEach(item => {\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\n        title = item.title\n      } else if (item.children) {\n        // 在所有子item中查找匹配的\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\n        // 如果有值才说明有匹配的\n        if(cItem) {\n          // 取出它的title\n          title = cItem.title\n        }\n      }\n    })\n    return title\n  }\n\n  /*\n  退出登陆\n   */\n  logout = () => {\n    // 显示确认框\n    Modal.confirm({\n      content: '确定退出吗?',\n      onOk: () => {\n        ////console.log('OK', this)\n        this.props.logout()\n      }\n    })\n  }\n\n  /*\n  第一次render()之后执行一次\n  一般在此执行异步操作: 发ajax请求/启动定时器\n   */\n  componentDidMount () {\n    // 获取当前的时间\n    this.getTime()\n  }\n\n  /*\n  当前组件卸载之前调用\n   */\n  componentWillUnmount () {\n    // 清除定时器\n    clearInterval(this.intervalId)\n  }\n\n\n  render() {\n\n    const {currentTime} = this.state\n\n    const userName = this.props.user.username\n    ////console.log(userName)\n\n    // 得到当前需要显示的title\n    // const title = this.getTitle()\n    const title = this.props.headTitle\n    return (\n      <div className=\"header\">\n        <div className=\"header-top\">\n          <span>欢迎, {userName}</span>\n          <LinkButton onClick={this.logout}>退出</LinkButton>\n        </div>\n        <div className=\"header-bottom\">\n          <div className=\"header-bottom-left\">{title}</div>\n          <div className=\"header-bottom-right\">\n            <span>{currentTime}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({headTitle: state.headTitle, user: state.user}),\n  {logout}\n)(withRouter(Header))","import React from \"react\"\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Legend,\n} from \"bizcharts\"\nimport DataSet from \"@antv/data-set\"\n\nexport default class Line extends React.Component {\n  render() {\n    const data = [\n      {\n        month: \"Jan\",\n        2020: 7.0,\n        2021: 4.9,\n        2022: 5.9\n      },\n      {\n        month: \"Feb\",\n        2020: 6.9,\n        2021: 5.2,\n        2022: 4.9\n      },\n      {\n        month: \"Mar\",\n        2020: 9.5,\n        2021: 7.7,\n        2022: 5.9\n      },\n      {\n        month: \"Apr\",\n        2020: 14.5,\n        2021: 8.5,\n        2022: 5.5\n      },\n      {\n        month: \"May\",\n        2020: 18.4,\n        2021: 11.9,\n        2022: 4.9\n      },\n      {\n        month: \"Jun\",\n        2020: 21.5,\n        2021: 15.2,\n        2022: 10.0\n      },\n      {\n        month: \"Jul\",\n        2020: 25.2,\n        2021: 17.0,\n        2022: 12.9\n      },\n      {\n        month: \"Aug\",\n        2020: 26.5,\n        2021: 16.6,\n        2022: 15.9\n      },\n      {\n        month: \"Sep\",\n        2020: 23.3,\n        2021: 14.2,\n        2022: 20.7\n      },\n      {\n        month: \"Oct\",\n        2020: 18.3,\n        2021: 10.3,\n        2022: 25.9\n      },\n      {\n        month: \"Nov\",\n        2020: 13.9,\n        2021: 6.6,\n        2022: 30.9\n      },\n      {\n        month: \"Dec\",\n        2020: 9.6,\n        2021: 4.8,\n        2022: 32.9\n      }\n    ]\n    const ds = new DataSet()\n    const dv = ds.createView().source(data)\n    dv.transform({\n      type: \"fold\",\n      fields: [\"2020\", \"2021\", \"2022\"],\n      // 展开字段集\n      key: \"city\",\n      // key字段\n      value: \"temperature\" // value字段\n    })\n    const cols = {\n      month: {\n        range: [0, 1]\n      }\n    }\n    return (\n      <div style={{float: 'left', width: 750,marginTop: 40}}>\n        <Chart height={250} data={dv} scale={cols} forceFit>\n          <Legend/>\n          <Axis name=\"month\"/>\n          <Axis\n            name=\"temperature\"\n            label={{\n              formatter: val => `${val}个`\n            }}\n          />\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom\n            type=\"line\"\n            position=\"month*temperature\"\n            size={2}\n            color={\"city\"}\n            shape={\"smooth\"}\n          />\n          <Geom\n            type=\"point\"\n            position=\"month*temperature\"\n            size={4}\n            shape={\"circle\"}\n            color={\"city\"}\n            style={{\n              stroke: \"#fff\",\n              lineWidth: 1\n            }}\n          />\n        </Chart>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip\n} from \"bizcharts\"\n\nexport default class Bar extends React.Component {\n  render() {\n    const data = [\n      {\n        year: \"1月\",\n        sales: 38\n      },\n      {\n        year: \"2月\",\n        sales: 52\n      },\n      {\n        year: \"3月\",\n        sales: 61\n      },\n      {\n        year: \"4月\",\n        sales: 145\n      },\n      {\n        year: \"5月\",\n        sales: 48\n      },\n      {\n        year: \"6月\",\n        sales: 38\n      },\n      {\n        year: \"7月\",\n        sales: 28\n      },\n      {\n        year: \"8月\",\n        sales: 38\n      },\n      {\n        year: \"9月\",\n        sales: 68\n      },\n      {\n        year: \"10月\",\n        sales: 38\n      },\n      {\n        year: \"11月\",\n        sales: 58\n      },\n      {\n        year: \"12月\",\n        sales: 38\n      }\n    ]\n    const cols = {\n      sales: {\n        tickInterval: 20\n      }\n    }\n    return (\n      <div style={{width: '100%', marginLeft: -30}}>\n        <Chart height={338} data={data} scale={cols}  forceFit>\n          <Axis name=\"year\"/>\n          <Axis name=\"sales\"/>\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom type=\"interval\" position=\"year*sales\"/>\n        </Chart>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {\n  Icon,\n  Card,\n  DatePicker,\n  Timeline\n} from 'antd'\nimport moment from 'moment'\nimport Line from './line'\nimport Bar from './bar'\nimport './home.less'\n\nconst dateFormat = 'YYYY/MM/DD'\nconst {RangePicker} = DatePicker\n\nexport default class Home extends Component {\n\n  state = {\n    isVisited: true\n  }\n\n  handleChange = (isVisited) => {\n    return () => this.setState({isVisited})\n  }\n\n  render() {\n    const {isVisited} = this.state\n\n    return (\n      <div className='home'>\n        \n\n        <Card\n          className=\"home-content\"\n          title={<div className=\"home-menu\">\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\n                  onClick={this.handleChange(true)}>访问量</span>\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\n          </div>}\n          extra={<RangePicker\n            defaultValue={[moment('2022/01/01', dateFormat), moment('2022/06/01', dateFormat)]}\n            format={dateFormat}\n          />}\n        >\n          <Card\n            className=\"home-table-left\"\n            title={isVisited ? '访问趋势' : '销售趋势'}\n            bodyStyle={{padding: 0, height: 275}}\n            extra={<Icon type=\"reload\"/>}\n          >\n            {isVisited?<Bar/> :<Line/>}\n          </Card>\n\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\n            <Timeline>\n              <Timeline.Item color=\"green\">项目起步</Timeline.Item>\n              <Timeline.Item color=\"green\">利用SpringCloud集成SpringBoot框架开发后端</Timeline.Item>\n              <Timeline.Item color=\"green\">利用postman接口测试</Timeline.Item>\n              <Timeline.Item color=\"red\">\n                 <p>利用React + antd 开发前端</p>\n                \n              </Timeline.Item>\n              <Timeline.Item>\n              <p>前端的业务实现</p>\n              </Timeline.Item>\n              <Timeline.Item>\n                \n                \n                <p>前后端联调</p>\n                <p>项目部署</p>\n              </Timeline.Item>\n            </Timeline>\n          </Card>\n        </Card>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Form,\n  Select,\n  Input\n} from 'antd'\n\nconst Item = Form.Item\nconst Option = Select.Option\n\n/*\n添加分类的form组件\n */\nclass AddForm extends Component {\n\n  static propTypes = {\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\n    parentId: PropTypes.string.isRequired, // 父分类的ID\n  }\n\n  componentWillMount () {\n    this.props.setForm(this.props.form)\n  }\n\n  render() {\n    const {categorys, parentId} = this.props\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <Form>\n        \n\n        <Item>分类名称：\n          {\n            getFieldDecorator('name', {\n              initialValue: '',\n              rules: [\n                {required: true, message: '分类名称必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入分类名称'/>\n            )\n          }\n        </Item>\n\n        <Item>排序值：\n          {\n            getFieldDecorator('orderNum', {\n              initialValue: '',\n              rules: [\n                {required: true, message: '排序值必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入排序值'/>\n            )\n          }\n        </Item>\n\n        <Item>目录级别：\n          {\n            getFieldDecorator('type', {\n              initialValue: '',\n              rules: [\n                {required: true, message: '目录级别必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入目录级别（1，2，3）'/>\n            )\n          }\n        </Item>\n\n        <Item>上级目录id：\n          {\n            getFieldDecorator('parentId', {\n              initialValue: '',\n              rules: [\n                {required: true, message: '上级目录id必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入上级目录id'/>\n            )\n          }\n        </Item>\n\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(AddForm);","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Form,\n  Input\n} from 'antd'\n\nconst Item = Form.Item\n\n/*\n更新分类的form组件\n */\nclass UpdateForm extends Component {\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    setForm: PropTypes.func.isRequired\n  }\n\n  componentWillMount () {\n    // 将form对象通过setForm()传递父组件\n    this.props.setForm(this.props.form)\n  }\n\n  render() {\n\n    const {name,orderNum,type,parentId} = this.props\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <Form>\n        <Item> 分类名称\n          {\n            getFieldDecorator('name', {\n              initialValue: name,\n              rules: [\n                {required: true, message: '分类名称必须输入'}\n              ]\n            })(\n             <Input placeholder='请输入分类名称'/>\n            )\n          }\n        </Item>\n\n        <Item> 排序值\n          {\n            getFieldDecorator('orderNum', {\n              initialValue: orderNum,\n              rules: [\n                {required: true, message: '排序值必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入排序值'/>\n            )\n          }\n        </Item>\n\n        <Item> 目录级别\n          {\n            getFieldDecorator('type', {\n              initialValue: type,\n              rules: [\n                {required: true, message: '目录级别必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入目录级别'/>\n            )\n          }\n        </Item>\n\n        <Item> 上级目录id：\n          {\n            getFieldDecorator('parentId', {\n              initialValue: parentId,\n              rules: [\n                {required: true, message: '上级目录id必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入上级目录id'/>\n            )\n          }\n        </Item>\n\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(UpdateForm)","import React, { Component } from 'react'\nimport {\n  Card,\n  Table,\n  Button,\n  Icon,\n  message,\n  Modal\n} from 'antd'\n\nimport LinkButton from '../../components/link-button'\nimport { reqCategorys, reqUpdateCategory, reqAddCategory, reqDeleteCategory } from '../../api'\nimport AddForm from './add-form'\nimport UpdateForm from './update-form'\n\n/*\n商品分类\n */\nexport default class Category extends Component {\n\n  state = {\n    loading: false, // 是否正在获取数据中\n    categorys: [], // 一级分类列表\n    subCategorys: [], // 二级分类列表\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\n    parentName: '', // 当前需要显示的分类列表的父分类名称\n    type: '1',\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\n  }\n\n  /*\n  初始化Table所有列的数组\n   */\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '分类的id',\n        dataIndex: 'id', // 显示数据对应的属性名\n      },\n      {\n        title: '分类的名称',\n        dataIndex: 'name', // 显示数据对应的属性名\n      },\n      {\n        title: '父类id',\n        dataIndex: 'parentId', // 显示数据对应的属性名\n      },\n      {\n        title: '目录级别',\n        dataIndex: 'type', // 显示数据对应的属性名\n      },\n      {\n        title: '排序值',\n        dataIndex: 'orderNum', // 显示数据对应的属性名\n      },\n      {\n        title: '更新时间',\n        dataIndex: 'updateTime', // 显示数据对应的属性名\n        render:(updateTime) => updateTime.substring(0,10)+\" \"+updateTime.substring(11,20)\n      },\n      {\n        title: '操作',\n        width: 300,\n        render: (category) => ( // 返回需要显示的界面标签\n          <span>\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\n            {/* console.log(this.state.parentId,this.state.type) */}\n            {/* {(this.state.parentId === '0' && this.state.type ==='1') ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null} */}\n            <LinkButton onClick={() => this.deleteCategory(category)}>删除分类</LinkButton>\n          </span>\n        )\n      }\n    ]\n  }\n\n\n  /*\n  异步获取一级/二级分类列表显示\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\n   */\n  getCategorys = async (pageNum,pageSize) => {\n\n    // 在发请求前, 显示loading\n    this.setState({ loading: true })\n    \n    // 发异步ajax请求, 获取数据\n    const result = await reqCategorys(pageNum,pageSize)\n    // 在请求完成后, 隐藏loading\n    this.setState({ loading: false })\n    \n\n    if (result.status === 10000) {\n      // 取出分类数组(可能是一级也可能二级的)\n      const categorys = result.data.list;\n      // //console.log(categorys);\n      // //console.log(categorys.length);\n    //  parentId = categorys.parentId;\n     // type = categorys.type;\n     \n     for(var i=0;i<categorys.length-1;i++){\n       //console.log(categorys[i].type,categorys[i].name,categorys[i].parentId);\n       let parentId = categorys[i].parentId;\n       let type = categorys[i].type;\n       if (parentId === 0 && type === 1) {\n        // 更新一级分类状态\n        // //console.log(\"更新一级分类\")\n        this.setState({\n          categorys\n        })\n        //console.log(categorys)\n      } else {\n        // 更新二级分类状态\n        // //console.log(\"更新二级分类\")\n        this.setState({\n          subCategorys: categorys\n        })\n      }\n\n     }\n      \n    } else {\n      message.error('获取分类列表失败')\n    }\n  }\n\n  /*\n  显示指定一级分类对象的二子列表\n   */\n  showSubCategorys = (category) => {\n    // 更新状态\n    this.setState({\n      parentId: category.id,\n      parentName: category.name,\n      type: category.type,\n    }, () => { // 在状态更新且重新render()后执行\n      //console.log('parentId', this.state.parentId) // '0'\n      // 获取二级分类列表显示\n      this.getCategorys(1,100)\n    })\n  }\n\n  /*\n  显示指定一级分类列表\n   */\n  showCategorys = () => {\n    // 更新为显示一列表的状态\n    this.setState({\n      parentId: '0',\n      parentName: '',\n      subCategorys: []\n    })\n  }\n\n  /*\n  响应点击取消: 隐藏确定框\n   */\n  handleCancel = () => {\n    // 清除输入数据\n    this.form.resetFields()\n    // 隐藏确认框\n    this.setState({\n      showStatus: 0\n    })\n  }\n\n  /*\n  显示添加的确认框\n   */\n  showAdd = () => {\n    this.setState({\n      showStatus: 1\n    })\n  }\n\n  /*\n  添加分类\n   */\n  addCategory = () => {\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        // 隐藏确认框\n        this.setState({\n          showStatus: 0\n        })\n\n        // 收集数据, 并提交添加分类的请求\n        //const { name,type,parentId, orderNum } = values\n        const params = values;\n        //console.log(params)\n        const result = await reqAddCategory(params)\n        if (result.status === 10000) {\n          this.getCategorys(1,100)\n          // // 添加的分类就是当前分类列表下的分类\n          // if (parentId === this.state.parentId) {\n          //   // 重新获取当前分类列表显示\n          //   this.getCategorys(1,10)\n          // } \n          // else if (parentId === '0') { // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\n          //   this.getCategorys(1,10)\n          // }\n        }\n        // 清除输入数据\n        this.form.resetFields()\n      }\n    })\n  }\n\n\n  /*\n  显示修改的确认框\n   */\n  showUpdate = (category) => {\n    // 保存分类对象\n    this.category = category\n    // 更新状态\n    this.setState({\n      showStatus: 2\n    })\n  }\n\n  /*\n  更新分类\n   */\n  updateCategory = () => {\n    //console.log('updateCategory()')\n    // 进行表单验证, 只有通过了才处理\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        // 1. 隐藏确定框\n        this.setState({\n          showStatus: 0\n        })\n\n        // 准备数据\n        const id = this.category.id\n        //const { name ,type,orderNum,parentId } = values\n      //  //console.log(values.categoryName);\n       const name = values.name;\n       const type = values.type;\n       const orderNum = values.orderNum;\n       const parentId = values.parentId;\n       const params = {id,name,type,orderNum,parentId};\n\n        // 2. 发请求更新分类\n        const result = await reqUpdateCategory(params)\n        if (result.status === 10000) {\n          // 3. 重新显示列表\n          this.getCategorys(1,100)\n        }\n        // 清除输入数据\n        this.form.resetFields()\n      }\n    })\n\n\n  }\n\n  /*删除分类*/\n  deleteCategory = (Category) => {\n    Modal.confirm({\n      title: `确认删除${Category.name}吗?`,\n      onOk: async () => {\n        //console.log(Category.id)\n        let id =parseInt(Category.id);\n        \n        const result = await reqDeleteCategory(id)\n        if (result.status === 10000) {\n          message.success('删除分类成功!')\n          this.getCategorys(1,100)\n        }\n      }\n    })\n  }\n \n\n\n\n  /*\n  为第一次render()准备数据\n   */\n  componentWillMount() {\n    this.initColumns()\n  }\n\n  /*\n  执行异步任务: 发异步ajax请求\n   */\n  componentDidMount() {\n    // 获取一级分类列表显示\n    this.getCategorys(1,100)\n  }\n\n  render() {\n\n    // 读取状态数据\n    const { categorys, subCategorys, parentId, parentName, loading, showStatus } = this.state\n    // 读取指定的分类\n    const category = this.category || {} // 如果还没有指定一个空对象\n\n    // card的左侧\n    const title = parentId === '0' ? '商品分类列表' : (\n      <span>\n        <LinkButton onClick={this.showCategorys}>根分类列表</LinkButton>\n        <Icon type='arrow-right' style={{ marginRight: 5 }} />\n        <span>{parentName}</span>\n      </span>\n    )\n    // Card的右侧\n    const extra = (\n      <Button type='primary' onClick={this.showAdd}>\n        <Icon type='plus' />\n        添加\n      </Button>\n    )\n\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          bordered\n          rowKey='id'\n          loading={loading}\n          dataSource={parentId === '0' ? categorys : subCategorys}\n          columns={this.columns}\n          pagination={{ defaultPageSize: 5, showQuickJumper: true }}\n        />\n\n        <Modal\n          title=\"添加分类\"\n          visible={showStatus === 1}\n          onOk={this.addCategory}\n          onCancel={this.handleCancel}\n        >\n          <AddForm\n            categorys={categorys}\n            parentId={parentId}\n            setForm={(form) => { this.form = form }}\n          />\n        </Modal>\n\n        <Modal\n          title=\"更新分类\"\n          visible={showStatus === 2}\n          onOk={this.updateCategory}\n          onCancel={this.handleCancel}\n        >\n          <UpdateForm\n            categoryName={category.name}\n            orderNum = {category.orderNum}\n            type={category.type}\n            parentId={category.parentId}\n            setForm={(form) => { this.form = form }}\n          />\n        </Modal>\n      </Card>\n    )\n  }\n}","\n/*\n包含一些常量值的模块\n */\nexport const PAGE_SIZE = 8 // 每页显示的记录数\nexport const BASE_IMG_URL = 'http://localhost:8087/admin/upload/file' // 上传图片的基础路径","import React, { Component } from 'react'\nimport {\n  Card,\n  Button,\n  Icon,\n  Table,\n  message,\n  Modal\n} from 'antd'\n\nimport LinkButton from '../../components/link-button'\nimport { reqProducts, reqSearchProducts, reqUpdateStatus, reqDeleteProduct } from '../../api'\nimport { PAGE_SIZE } from '../../utils/constants'\nimport memoryUtils from \"../../utils/memoryUtils\";\n\n\n/*\nProduct的默认子路由组件\n */\nexport default class ProductHome extends Component {\n\n  state = {\n    total: 0, // 商品的总数量\n    products: [], // 商品的数组\n    loading: false, // 是否正在加载中\n    keyword: '', // 搜索的关键字\n  }\n\n  /*\n  初始化table的列的数组\n   */\n  initColumns = () => {\n    this.columns = [\n      {\n        width: 50,\n        title: '商品id',\n        dataIndex: 'id',\n      },\n      {\n        title: '商品名称',\n        dataIndex: 'name',\n      },\n      {\n        title: '商品更新时间',\n        dataIndex: 'updateTime',\n        render: (updateTime) => updateTime.substring(0, 10) + \" \" + updateTime.substring(11, 20)\n      },\n      {\n        title: '价格',\n        dataIndex: 'price',\n        render: (price) => '¥' + price / 100\n      },\n      {\n        title: '商品库存',\n        dataIndex: 'stock',\n      },\n      {\n        width: 100,\n        title: '状态',\n        //dataIndex: 'status',\n        render: (product) => {\n         // //console.log(product)\n          const { status, id } = product\n          const newStatus = status === 1 ? 0 : 1\n          return (\n            <span>\n              <span>{status === 1 ? '在售' : '已下架'}</span>\n              <Button\n                type='primary'\n                onClick={() => this.updateStatus(id, newStatus)}\n              >\n                {status === 1 ? '下架' : '上架'}\n              </Button>\n            </span>\n          )\n        }\n      },\n      {\n        width: 100,\n        title: '操作',\n        render: (product) => {\n          return (\n            <span>\n              {/*将product对象使用state传递给目标路由组件*/}\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\n              <LinkButton onClick={() => this.deleteProduct(product)}>删除</LinkButton>\n            </span>\n          )\n        }\n      },\n    ];\n  }\n\n  /*\n  显示商品详情界面\n   */\n  showDetail = (product) => {\n    // 缓存product对象 ==> 给detail组件使用\n    memoryUtils.product = product\n    this.props.history.push('/product/detail')\n  }\n\n  /*\n  显示修改商品界面\n   */\n  showUpdate = (product) => {\n    // 缓存product对象 ==> 给修改组件使用\n    memoryUtils.product = product\n    this.props.history.push('/product/update')\n  }\n\n  /*\n  获取指定页码的列表数据显示\n   */\n  getProducts = async (pageNum) => {\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\n    this.setState({ loading: true }) // 显示loading\n\n    const { keyword} = this.state\n    // 如果搜索关键字有值, 说明我们要做搜索分页\n    let result\n    if (keyword) {\n      result = await reqSearchProducts({ pageNum, pageSize: PAGE_SIZE, keyword })\n    } else { // 一般分页请求\n      result = await reqProducts(pageNum, PAGE_SIZE)\n    }\n\n    this.setState({ loading: false }) // 隐藏loading\n    if (result.status === 10000) {\n      // 取出分页数据, 更新状态, 显示分页列表\n      const { total, list } = result.data\n     // //console.log(total, list)\n      this.setState({\n        total,\n        products: list\n      })\n    }\n  }\n\n  /*\n  更新指定商品的状态\n   */\n  updateStatus = async (ids, sellStatus) => {\n    const result = await reqUpdateStatus(ids, sellStatus)\n    if (result.status === 10000) {\n      message.success('更新商品成功')\n      this.getProducts(this.pageNum)\n    }\n  }\n\n  /*\n  删除指定商品\n  */\n  deleteProduct = (product) => {\n   // //console.log(product, \"=======\")\n    Modal.confirm({\n      title: `确定删除${product.name}吗?`,\n      onOk: async () => {\n        const result = await reqDeleteProduct(product.id)\n        if (result.status === 10000) {\n          message.success('删除商品成功!')\n          this.getProducts(this.pageNum)\n        }\n      }\n    })\n  }\n\n  componentWillMount() {\n    this.initColumns()\n  }\n\n  componentDidMount() {\n    this.getProducts(1)\n  }\n\n  render() {\n\n    // 取出状态数据\n    const { products, total, loading, keyword } = this.state\n\n\n\n    // const title = (\n    //   <span>\n       \n    //       按名称搜索\n        \n    //     <Input\n    //       placeholder='关键字'\n    //       style={{ width: 150, margin: '0 15px' }}\n    //       value={keyword}\n    //       onChange={event => this.setState({ keyword: event.target.value })}\n    //     />\n    //     <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\n    //   </span>\n    // )\n    const title = (\n      <span>商品列表</span>\n    )\n\n    const extra = (\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\n        <Icon type='plus' />\n        添加商品\n      </Button>\n    )\n\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          bordered\n          rowKey='id'\n          loading={loading}\n          dataSource={products}\n          columns={this.columns}\n          pagination={{\n            current: this.pageNum,\n            total,\n            defaultPageSize: PAGE_SIZE,\n            showQuickJumper: true,\n            onChange: this.getProducts\n          }}\n        />\n      </Card>\n    )\n  }\n}","/*\n * 富文本编辑器\n */\nimport React, {Component} from 'react'\nimport LzEditor from 'react-lz-editor'\n\nclass RichEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            responseList: [],\n            content: this.props.detailContent,\n        }\n    }\n    //富文本编辑框改变\n    receiveHtml = (content) => {\n        this.props.onChange(content) //回调函数传递参数给父组件\n    }\n    render() {\n        const uploadProps = {\n            action: \"/admin/upload/file\",\n            onChange: this.onChange,\n            listType: 'picture',\n            fileList: this.state.responseList,\n            data: (file) => {\n\n            },\n            multiple: true,\n            beforeUpload: this.beforeUpload,\n            showUploadList: true\n        }\n        return (\n            <div>\n                <LzEditor active={true} cbReceiver={this.receiveHtml} uploadProps={uploadProps} />\n            </div>\n        );\n    }\n}\n\nexport default RichEditor","import React, { PureComponent } from 'react'\nimport { Row, Col, Select, Upload, Card, Icon, Form, Input, TreeSelect, Cascader, Button, message } from 'antd';\nimport RichEditor from './rich-editor'\n// import PicturesWall from './pictures-wall'\n// import RichTextEditor from './rich-text-editor'\nimport LinkButton from '../../components/link-button'\nimport './add-product.less'\nimport { reqCategorys,reqCategorys2, reqAddProduct, reqUpdateProduct } from '../../api/index'\nimport memoryUtils from \"../../utils/memoryUtils\";\n\n//const { Option } = Select;\nconst { TreeNode } = TreeSelect;\nconst { Item } = Form\nconst { TextArea } = Input\n// const Option = Select.Option;\n/*\nProduct的添加和更新的子路由组件\n */\nclass ProductAddUpdate extends PureComponent {\n\n\n    constructor(props) {\n        super(props);\n\n        // 取出携带的state\n        const product = memoryUtils.product  // 如果是添加没值, 否则有值\n        // 保存是否是更新的标识\n        // this.isUpdate = !!product.id\n        // //console.log(this.isUpdate)\n        // 保存商品(如果没有, 保存是{})\n        this.product = product || {}\n        //console.log(product)\n        this.state = {\n            //    id: product.id,\n            //  isUpdate: this.isUpdate,\n            categoryList: [], //品类列表数据\n            name: \"\", //商品名称\n            // subtitle: '', //商品描述\n            categoryId: '', //品类id\n            tree:[],\n            // subImages: [], //上传图片数组\n            image: \"\",\n            price: '', //商品价格\n            stock: '', //库存\n            detail: \"\", //商品详情\n            status: 1 //商品状态 初始为1为在售\n        }\n    }\n\n    loadCategoryList = () => {\n        // let params = {\n        //     categoryId: 0\n        // }\n        // reqCategorys(1, 100).then(res => {\n        //     let { status, msg, data } = res;\n        //     if (status !== 10000) {\n        //         message(msg);\n        //         return\n        //     }\n\n        //     let categoryList = Array.from(data.list);\n\n\n        //     let topCategoryList = categoryList.filter((c) => (c.parentId === 0))\n        //     //console.log(topCategoryList)\n        //     let subCategoryList = categoryList.filter((c) => (c.parentId !== 0))\n        //     //console.log(subCategoryList)\n        //     this.setState({\n        //         categoryList\n            \n        //     })\n        // })\n\n        reqCategorys2().then(res => {\n            if (res.status === 10000) {\n                this.setState({ tree: res.data });\n              } else {\n                message.error(res.msg);\n              }\n        })\n\n        // http.get(api.categoryList2).then((res) => {\n        //     if (res.status === 10000) {\n        //       this.setState({ tree: res.data });\n        //     } else {\n        //       message.error(res.msg);\n        //     }\n        //   })\n    }\n\n    //分类选择\n    selectChange = (val) => {\n        this.setState({\n            categoryId: val\n        })\n    }\n    //改变商品名称\n    onName = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    //改变商品价格\n    onPrice = (e) => {\n        this.setState({\n            price: 100 * e.target.value\n        })\n    }\n    //改变商品库存件数\n    onPieces = (e) => {\n        this.setState({\n            stock: e.target.value\n        })\n    }\n    //上传图片\n    uploadImg = (obj) => {\n        let { file } = obj;\n        if (file.status === 'done') {\n            let { status, data } = file.response;\n            if (status === 10000) {\n                //let subImages = this.state.subImages.push(data.url);\n                this.setState({\n                    // subImages,\n                    image: data\n                })\n            }\n        }\n    }\n    //上传图片数据格式化\n    getSubImagesString = () => {\n        return this.state.subImages.map((image) => image.uri).join(',');\n    }\n\n    //获取上传图片后的图片资源位置\n    getImageLocation = () => {\n        return this.state.image;\n    }\n\n    //商品详情改变\n    detailChange = (detail) => {\n        this.setState({\n            detail\n        })\n    }\n    //提交\n    onSubmit = () => {\n\n        const product = memoryUtils.product  // 如果是添加没值, 否则有值\n        let params = {\n            name: this.state.name, //商品名称\n            // subtitle    : this.state.subtitle, //商品描述\n            categoryId: parseInt(this.state.categoryId, 10), //品类id\n            // subImages   : this.getSubImagesString(), //上传图片数组\n            image: this.state.image,\n            detail: this.state.detail, //商品详情\n            price: parseInt(this.state.price), //商品价格\n            stock: parseInt(this.state.stock, 10), //商品库存\n            status: this.state.status, //商品状态 初始为1为在售\n        }\n\n        //console.log(params)\n\n\n        // 判断用户名为空\n        if (typeof params.name !== 'string' || params.name.length === 0) {\n\n            message.info('商品名称不能为空！');\n            return;\n\n\n        }\n        // 判断描述不能为空\n        // if(typeof params.subtitle !== 'string' || params.subtitle.length ===0){\n        //     message.info('商品描述不能为空！');\n        //     return;\n        // }\n\n        // 验证品类ID\n        if (typeof params.categoryId !== 'number' || !(params.categoryId > 0)) {\n\n            message.info('请选择商品品类！');\n            return;\n\n\n        }\n\n        // 判断商品价格为数字，且大于0\n        if (typeof params.price !== 'number' || !(params.price >= 0)) {\n\n            message.info('请输入正确的商品价格');\n            return;\n\n\n        }\n\n        // 判断库存为数字，且大于或等于0\n        if (typeof params.stock !== 'number' || !(params.stock >= 0)) {\n\n            message.info('请输入正确的商品库存');\n            return {\n                status: false,\n            }\n\n\n        }\n        // 判断图片是否上传\n        // if(typeof params.subImages !== 'string' || !params.subImages){\n        //     return {\n        //         status: false,\n        //         msg: '请上传图片！'\n        //     }\n        // }\n        //console.log(\"校验图片是否上传\")\n        if (!params.image) {\n\n            message.info('请上传商品图片');\n            return;\n\n\n        }\n        // //console.log(\"校验图片完成\")\n        // 判断商品详情不能为空\n        if (!params.detail) {\n\n            message.info('请添加商品详情');\n            return;\n\n\n        }\n        // //console.log(params.detail)\n        ////console.log(\"开始发送添加商品请求\")\n        // 如果是更新, 需要添加_id\n\n        params = {\n            name: this.state.name, //商品名称\n            // subtitle    : this.state.subtitle, //商品描述\n            categoryId: parseInt(this.state.categoryId, 10), //品类id\n            // subImages   : this.getSubImagesString(), //上传图片数组\n            image: this.state.image,\n            detail: this.state.detail, //商品详情\n            price: parseInt(this.state.price), //商品价格\n            stock: parseInt(this.state.stock, 10), //商品库存\n            status: this.state.status, //商品状态 初始为1为在售\n        }\n        reqAddProduct(params).then(res => {\n            let { status, data } = res;\n            //console.log(params)\n            //console.log(res)\n            if (status === 10000) {\n                message.success(data);\n                this.props.history.push('/product');\n            }\n        })\n    }\n\n\n\n    componentDidMount() {\n\n        this.loadCategoryList()\n    }\n\n    render() {\n\n        const product = memoryUtils.product  // 如果是添加没值, 否则有值\n        const fileList = [];\n        const uploadImg = {\n            action: '/admin/upload/file', //图片上传地址\n            //name: 'upload_file', //发到后台的文件参数名\n            file: 'upload_file', //发到后台的文件参数名\n            listType: 'picture',\n            defaultFileList: [...fileList],\n            className: 'upload-list-inline',\n        };\n\n        const title = (\n            <span>\n              <LinkButton>\n                <Icon\n                  type='arrow-left'\n                  style={{marginRight: 10, fontSize: 20}}\n                  onClick={() => this.props.history.goBack()}\n                />\n              </LinkButton>\n      \n              <span>添加商品</span>\n            </span>\n          )\n\n        return (\n            <div className=\"add-product\">\n                <Card title={title} className='product-detail'>\n                <Row>\n                    <Col span={5}><p className='label'>商品名称</p></Col>\n                    <Col span={10}><Input placeholder=\"请输入商品名称\" onChange={this.onName} /></Col>\n                </Row>\n                {/* <Row>\n                <Col span={5}><p className='label'>商品描述</p></Col>\n                <Col span={10}><Input placeholder=\"请输入商品描述\" onChange={this.onDescription} /></Col>\n            </Row> */}\n                <Row>\n                    <Col span={5}><p className='label'>所属分类</p></Col>\n                    <Col span={10}>\n                        {/* <Select defaultValue=\"\" className='select' onChange={this.selectChange} >\n                            <Option value=\"\">请选择一级分类</Option>\n                            {\n                                this.state.categoryList.length ? this.state.categoryList.map((category, index) => {\n                                    return <Option value={category.id} key={index}>{category.name}</Option>\n                                }) : null\n                            }\n\n                        </Select> */}\n                        <TreeSelect\n                            showSearch\n                            style={{ width: '100%' }}\n                            value={this.state.categoryId}\n                            // dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                            placeholder=\"Please select\"\n                            allowClear\n                            treeDefaultExpandAll\n                            onChange={(value) => { this.setState({ categoryId: value }) }}\n                        >\n                            {\n                                this.state.tree.map((item) => {\n                                    if (item.childCategory.length === 0) {\n                                        return (\n                                            <TreeNode value={item.id} title={item.name} key={item.id} />\n                                        )\n                                    } else {\n                                        return (\n                                            <TreeNode value={item.id} title={item.name} key={item.id}>\n                                                {item.childCategory.map((item2) => {\n                                                    //console.log(\"item2:\", item2);\n                                                    if (item2.childCategory.length === 0) {\n                                                        return (\n                                                            <TreeNode value={item2.id} title={item2.name} key={item2.id} />\n                                                        )\n                                                    } else {\n                                                        return (\n                                                            <TreeNode value={item2.id} title={item2.name} key={item2.id}>\n                                                                {\n                                                                    item2.childCategory.map((item3) => {\n                                                                        return (\n                                                                            <TreeNode value={item3.id} title={item3.name} key={item3.id} />\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </TreeNode>\n\n                                                        )\n                                                    }\n                                                })}\n                                            </TreeNode>\n                                        )\n                                    }\n                                })\n                            }\n                        </TreeSelect>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品价格</p></Col>\n                    <Col span={10}>\n                        <Input placeholder=\"价格\" addonAfter=\"元\" onChange={this.onPrice} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品库存</p></Col>\n                    <Col span={10}>\n                        <Input placeholder=\"库存\" addonAfter=\"件\" onChange={this.onPieces} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品图片</p></Col>\n                    <Col span={10}>\n                        <Upload {...uploadImg} onChange={this.uploadImg}>\n                            <Button><Icon type=\"upload\" /> 上传图片</Button>\n                        </Upload>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品详情</p></Col>\n                    <Col span={18}>\n                        <RichEditor detailContent={this.state.detail} onChange={this.detailChange}></RichEditor>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col offset={5} span={10}>\n                        <Button type=\"primary\" onClick={this.onSubmit}>提交</Button>\n                    </Col>\n                </Row>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\n// export default Form.create()(ProductAddUpdate)\n\nexport default ProductAddUpdate;","import React, { PureComponent } from 'react'\nimport { Row, Col, Select, Upload, Card, Icon, Form, Input, TreeSelect,Cascader, Button, message } from 'antd';\nimport RichEditor from './rich-editor'\n// import PicturesWall from './pictures-wall'\n// import RichTextEditor from './rich-text-editor'\nimport LinkButton from '../../components/link-button'\nimport './add-product.less'\nimport { reqCategorys, reqCategorys2,reqAddProduct, reqUpdateProduct } from '../../api/index'\nimport memoryUtils from \"../../utils/memoryUtils\";\n\nconst { Item } = Form\nconst { TextArea } = Input\nconst Option = Select.Option;\nconst { TreeNode } = TreeSelect;\n/*\nProduct的添加和更新的子路由组件\n */\nclass ProductUpdate extends PureComponent {\n\n\n    constructor(props) {\n        super(props);\n\n        // 取出携带的state\n        const product = memoryUtils.product  // 如果是添加没值, 否则有值\n        // // 保存是否是更新的标识\n        // this.isUpdate = !!product.id\n        // //console.log(this.isUpdate)\n        // 保存商品(如果没有, 保存是{})\n        this.product = product || {}\n        //console.log(product)\n        this.state = {\n            id: product.id,\n            // isUpdate: this.isUpdate,\n            categoryList: [], //品类列表数据\n            name: \"\", //商品名称\n            // subtitle: '', //商品描述\n            categoryId: '', //品类id\n            tree:[],\n\n            // subImages: [], //上传图片数组\n            image: \"\",\n            price: '', //商品价格\n            stock: '', //库存\n            detail: \"\", //商品详情\n            status: 1 //商品状态 初始为1为在售\n        }\n    }\n\n    loadCategoryList = () => {\n        reqCategorys2().then(res => {\n            if (res.status === 10000) {\n                this.setState({ tree: res.data });\n              } else {\n                message.error(res.msg);\n              }\n        })\n        // let params = {\n        //     categoryId: 0\n        // }\n        // reqCategorys(1, 100).then(res => {\n        //     let { status, msg, data } = res;\n        //     if (status !== 10000) {\n        //         message(msg);\n        //         return\n        //     }\n\n        //     let categoryList = Array.from(data.list);\n        //     let topCategoryList = categoryList.filter((c) => (c.parentId === 0))\n        //     //console.log(topCategoryList)\n        //     let subCategoryList = categoryList.filter((c) => (c.parentId !== 0))\n        //     //console.log(subCategoryList)\n        //     this.setState({\n        //         categoryList\n        //     })\n        // })\n    }\n\n    //分类选择\n    selectChange = (val) => {\n        this.setState({\n            categoryId: val\n        })\n    }\n    //改变商品名称\n    onName = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    //改变商品描述\n    // onDescription = (e) => {\n    //     this.setState({\n    //         subtitle: e.target.value\n    //     })\n    // }\n    //改变商品价格\n    onPrice = (e) => {\n        this.setState({\n            price: 100 * e.target.value\n        })\n    }\n    //改变商品库存件数\n    onPieces = (e) => {\n        this.setState({\n            stock: e.target.value\n        })\n    }\n    //上传图片\n    uploadImg = (obj) => {\n        let { file } = obj;\n        if (file.status === 'done') {\n            let { status, data } = file.response;\n            if (status === 10000) {\n                //let subImages = this.state.subImages.push(data.url);\n                this.setState({\n                    // subImages,\n                    image: data\n                })\n            }\n        }\n    }\n    //上传图片数据格式化\n    getSubImagesString = () => {\n        return this.state.subImages.map((image) => image.uri).join(',');\n    }\n\n    //获取上传图片后的图片资源位置\n    getImageLocation = () => {\n        return this.state.image;\n    }\n\n    //商品详情改变\n    detailChange = (detail) => {\n        this.setState({\n            detail\n        })\n    }\n    //提交\n    onSubmit = () => {\n\n        const product = memoryUtils.product  // 如果是添加没值, 否则有值\n        let params = {\n            name: this.state.name, //商品名称\n            // subtitle    : this.state.subtitle, //商品描述\n            categoryId: parseInt(this.state.categoryId, 10), //品类id\n            // subImages   : this.getSubImagesString(), //上传图片数组\n            image: this.state.image,\n            detail: this.state.detail, //商品详情\n            price: parseInt(this.state.price), //商品价格\n            stock: parseInt(this.state.stock, 10), //商品库存\n            status: this.state.status, //商品状态 初始为1为在售\n        }\n\n        //console.log(params)\n\n\n        // 判断名为空\n        if (typeof params.name !== 'string' || params.name.length === 0) {\n            message.info('商品名称不能为空！');\n            return;\n        }\n\n        // 验证品类ID\n        if (typeof params.categoryId !== 'number' || !(params.categoryId > 0)) {\n            message.info('请选择商品品类！');\n            return;\n        }\n\n        // 判断商品价格为数字，且大于0\n        if (typeof params.price !== 'number' || !(params.price >= 0)) {\n            message.info('请输入正确的商品价格');\n            return;\n        }\n\n        // 判断库存为数字，且大于或等于0\n        if (typeof params.stock !== 'number' || !(params.stock >= 0)) {\n            message.info('请输入正确的商品库存');\n            return {\n                status: false,\n            }\n        }\n        // 判断图片是否上传\n        // if(typeof params.subImages !== 'string' || !params.subImages){\n        //     return {\n        //         status: false,\n        //         msg: '请上传图片！'\n        //     }\n        // }\n        //console.log(\"校验图片是否上传\")\n        if (!params.image) {\n            message.info('请上传商品图片');\n            return;\n        }\n        // //console.log(\"校验图片完成\")\n        // 判断商品详情不能为空\n        if (!params.detail) {\n            message.info('请添加商品详情');\n            return;\n        }\n        // //console.log(params.detail)\n        ////console.log(\"开始发送添加商品请求\")\n        // 如果是更新, 需要添加_id\n        const id = this.state.id;\n        //console.log(id)\n        params = {\n            id: id,\n            name: this.state.name, //商品名称\n            // subtitle    : this.state.subtitle, //商品描述\n            categoryId: parseInt(this.state.categoryId, 10), //品类id\n            // subImages   : this.getSubImagesString(), //上传图片数组\n            image: this.state.image,\n            detail: this.state.detail, //商品详情\n            price: parseInt(this.state.price), //商品价格\n            stock: parseInt(this.state.stock, 10), //商品库存\n            status: this.state.status, //商品状态 初始为1为在售\n        }\n        reqUpdateProduct(params).then(res => {\n            let { status, data } = res;\n            //console.log(params)\n            //console.log(res)\n            if (status === 10000) {\n                message.success(data);\n                this.props.history.push('/product');\n            }\n        })\n\n    }\n\n\n    componentDidMount() {\n\n        this.loadCategoryList()\n    }\n\n    render() {\n\n        const product = memoryUtils.product  // 如果是添加没值, 否则有值\n        const fileList = [];\n        const uploadImg = {\n            action: '/admin/upload/file', //图片上传地址\n            //name: 'upload_file', //发到后台的文件参数名\n            file: 'upload_file', //发到后台的文件参数名\n            listType: 'picture',\n            defaultFileList: [...fileList],\n            className: 'upload-list-inline',\n        };\n\n        const title = (\n            <span>\n              <LinkButton>\n                <Icon\n                  type='arrow-left'\n                  style={{marginRight: 10, fontSize: 20}}\n                  onClick={() => this.props.history.goBack()}\n                />\n              </LinkButton>\n      \n              <span>修改商品</span>\n            </span>\n          )\n\n        return (\n            <div className=\"add-product\">\n                  <Card title={title} className='product-detail'>\n                <Row>\n                    <Col span={5}><p className='label'>商品名称</p></Col>\n                    <Col span={10}><Input placeholder=\"请输入商品名称\" onChange={this.onName} defaultValue={product.name} /></Col>\n                </Row>\n                {/* <Row>\n                <Col span={5}><p className='label'>商品描述</p></Col>\n                <Col span={10}><Input placeholder=\"请输入商品描述\" onChange={this.onDescription} /></Col>\n            </Row> */}\n                <Row>\n                    <Col span={5}><p className='label'>所属分类</p></Col>\n                    <Col span={10}>\n                        {/* <Select defaultValue=\"\" className='select' onChange={this.selectChange} defaultValue={product.categoryId}>\n                            <Option value=\"\">请选择一级分类</Option>\n                            {\n                                this.state.categoryList.length ? this.state.categoryList.map((category, index) => {\n                                    return <Option value={category.id} key={index}>{category.name}</Option>\n                                }) : null\n                            }\n\n                        </Select> */}\n                         <TreeSelect\n                            showSearch\n                            style={{ width: '100%' }}\n                            value={this.state.categoryId}\n                            // dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                            placeholder=\"Please select\"\n                            allowClear\n                            treeDefaultExpandAll\n                            onChange={(value) => { this.setState({ categoryId: value }) }}\n                        >\n                            {\n                                this.state.tree.map((item) => {\n                                    if (item.childCategory.length === 0) {\n                                        return (\n                                            <TreeNode value={item.id} title={item.name} key={item.id} />\n                                        )\n                                    } else {\n                                        return (\n                                            <TreeNode value={item.id} title={item.name} key={item.id}>\n                                                {item.childCategory.map((item2) => {\n                                                    //console.log(\"item2:\", item2);\n                                                    if (item2.childCategory.length === 0) {\n                                                        return (\n                                                            <TreeNode value={item2.id} title={item2.name} key={item2.id} />\n                                                        )\n                                                    } else {\n                                                        return (\n                                                            <TreeNode value={item2.id} title={item2.name} key={item2.id}>\n                                                                {\n                                                                    item2.childCategory.map((item3) => {\n                                                                        return (\n                                                                            <TreeNode value={item3.id} title={item3.name} key={item3.id} />\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </TreeNode>\n\n                                                        )\n                                                    }\n                                                })}\n                                            </TreeNode>\n                                        )\n                                    }\n                                })\n                            }\n                        </TreeSelect>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品价格</p></Col>\n                    <Col span={10}>\n                        <Input placeholder=\"价格\" addonAfter=\"元\" onChange={this.onPrice} defaultValue={product.price / 100} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品库存</p></Col>\n                    <Col span={10}>\n                        <Input placeholder=\"库存\" addonAfter=\"件\" onChange={this.onPieces} defaultValue={product.stock} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品图片</p></Col>\n                    <Col span={10}>\n                        <Upload {...uploadImg} onChange={this.uploadImg}>\n                            <Button><Icon type=\"upload\" /> 上传图片</Button>\n                        </Upload>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={5}><p className='label'>商品详情</p></Col>\n                    <Col span={18}>\n                        <RichEditor detailContent={this.state.detail} onChange={this.detailChange} defaultValue={product.detail}></RichEditor>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col offset={5} span={10}>\n                        <Button type=\"primary\" onClick={this.onSubmit}>提交</Button>\n                    </Col>\n                </Row>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\n// export default Form.create()(ProductAddUpdate)\n\nexport default ProductUpdate;","import React, { Component } from 'react'\nimport {\n  Card,\n  Icon,\n  List\n} from 'antd'\nimport LinkButton from '../../components/link-button'\nimport memoryUtils from \"../../utils/memoryUtils\";\n\nconst Item = List.Item\n\n\n/*\nProduct的详情子路由组件\n */\nexport default class ProductDetail extends Component {\n  /*\n 在卸载之前清除保存的数据\n */\n  componentWillUnmount() {\n    memoryUtils.product = {}\n  }\n\n\n  render() {\n\n    // 读取携带过来的state数据\n    const { name, stock, price, detail, image } = memoryUtils.product\n    const title = (\n      <span>\n        <LinkButton>\n          <Icon\n            type='arrow-left'\n            style={{ marginRight: 10, fontSize: 20 }}\n            onClick={() => this.props.history.goBack()}\n          />\n        </LinkButton>\n        <span>商品详情</span>\n      </span>\n    )\n    return (\n      <Card title={title} className='product-detail'>\n        <List>\n          <Item>\n            <span className=\"left\">商品名称:</span>\n            <span>{name}</span>\n          </Item>\n          <Item>\n            <span className=\"left\">商品价格:</span>\n            <span>{price / 100}元</span>\n          </Item>\n          <Item>\n            <span className=\"left\">商品库存:</span>\n            <span>{stock}件</span>\n          </Item>\n          <Item>\n            <span className=\"left\">商品图片:</span>\n            <span>\n              {\n                <img\n                  key={image}\n                  src={image}\n                  className=\"product-img\"\n                  alt=\"image\"\n                />\n              }\n            </span>\n          </Item>\n          <Item>\n            <span className=\"left\">商品详情:</span>\n            <span dangerouslySetInnerHTML={{ __html: detail }}>\n            </span>\n          </Item>\n        </List>\n      </Card>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport ProductHome from './home'\nimport ProductAddUpdate from './add-update'\nimport ProductUpdate from './update'\nimport ProductDetail from './detail'\n\nimport './product.less'\n\n/*\n商品路由\n */\nexport default class Product extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\n        <Route path='/product/update' component={ProductUpdate}/>\n        <Route path='/product/detail' component={ProductDetail}/>\n        <Redirect to='/product'/>\n      </Switch>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Card, Button} from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的柱状图路由组件\n */\nexport default class Bar extends Component {\n\n  state = {\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\n  }\n\n  update = () => {\n    this.setState(state => ({\n      sales: state.sales.map(sale => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store-1)\n        return pre\n      }, []),\n    }))\n  }\n\n  /*\n  返回柱状图的配置对象\n   */\n  getOption = (sales, stores) => {\n    return {\n      title: {\n        text: 'ECharts 入门示例'\n      },\n      tooltip: {},\n      legend: {\n        data:['销量', '库存']\n      },\n      xAxis: {\n        data: ['家电', '电脑', '生活用品', '服装', '食品']\n      },\n      yAxis: {},\n      series: [{\n        name: '销量',\n        type: 'bar',\n        data: sales,\n        itemStyle: {\n          normal: {\n            color: \"#ee8572\"\n          }\n        }\n      }, {\n        name: '库存',\n        type: 'bar',\n        data: stores,\n        itemStyle: {\n          normal: {\n            color: \"#63b7af\"\n          }\n        }\n      }]\n    }\n  }\n\n  getOption2 = () => {\n    return {\n\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n      },\n      legend: {\n        data: ['家电', '电脑', '生活用品', '服装', '食品']\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'category',\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n      },\n      series: [\n        {\n          name: '家电',\n          type: 'bar',\n          stack: '总量',\n          label: {\n            show: true,\n            position: 'insideRight'\n          },\n          data: [320, 302, 301, 334, 390, 330, 320]\n        },\n        {\n          name: '电脑',\n          type: 'bar',\n          stack: '总量',\n          label: {\n            show: true,\n            position: 'insideRight'\n          },\n          data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n          name: '生活用品',\n          type: 'bar',\n          stack: '总量',\n          label: {\n            show: true,\n            position: 'insideRight'\n          },\n          data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n          name: '服装',\n          type: 'bar',\n          stack: '总量',\n          label: {\n            show: true,\n            position: 'insideRight'\n          },\n          data: [150, 212, 201, 154, 190, 330, 410]\n        },\n        {\n          name: '食品',\n          type: 'bar',\n          stack: '总量',\n          label: {\n            show: true,\n            position: 'insideRight'\n          },\n          data: [820, 832, 901, 934, 1290, 1330, 1320]\n        }\n      ]\n    };\n  }\n  \n  render() {\n    const {sales, stores} = this.state\n    return (\n      <div>\n        <Card>\n          <Button type='primary' onClick={this.update}>更新</Button>\n        </Card>\n\n        <Card title='柱状图一'>\n          <ReactEcharts \n            option={this.getOption(sales, stores)} \n            \n          />\n        </Card>\n\n        <Card title='柱状图二'>\n          <ReactEcharts option={this.getOption2()} />\n        </Card>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Card, Button} from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的折线图路由组件\n */\nexport default class Line extends Component {\n\n  state = {\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\n  }\n\n  update = () => {\n    this.setState(state => ({\n      sales: state.sales.map(sale => sale + 1),\n      stores: state.stores.reduce((pre, store) => {\n        pre.push(store-1)\n        return pre\n      }, []),\n    }))\n  }\n\n  /*\n  返回柱状图的配置对象\n   */\n  getOption = (sales, stores) => {\n    return {\n      title: {\n        text: 'ECharts 入门示例'\n      },\n      tooltip: {},\n      legend: {\n        data:['销量', '库存']\n      },\n      xAxis: {\n        data: ['家电', '电脑', '生活用品', '服装', '食品']\n      },\n      yAxis: {},\n      series: [{\n        name: '销量',\n        type: 'line',\n        data: sales\n      }, {\n        name: '库存',\n        type: 'line',\n        data: stores,\n        itemStyle: {\n          normal: {\n            color: \"#ee8572\"\n          }\n        }\n      }]\n    }\n  }\n\n  render() {\n    const {sales, stores} = this.state\n    return (\n      <div>\n        <Card>\n          <Button type='primary' onClick={this.update}>更新</Button>\n        </Card>\n\n        <Card title='折线图一'>\n          <ReactEcharts option={this.getOption(sales, stores)} />\n        </Card>\n\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Card } from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的饼图路由组件\n */\nexport default class Pie extends Component {\n\n  getOption = () => {\n    return {\n      title: {\n        text: '销售类型比重',\n        subtext: '暂未完成',\n        x: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 10,\n        data: ['家电', '电脑', '生活用品', '服装', '食品']\n      },\n      series: [\n        {\n          name: '访问来源',\n          type: 'pie',\n          radius: ['50%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '30',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [\n            { value: 335, name: '家电' },\n            { value: 310, name: '电脑' },\n            { value: 234, name: '生活用品' },\n            { value: 135, name: '服装' },\n            { value: 1548, name: '食品' }\n          ]\n        }\n      ]\n    };\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Card title='饼图一'>\n          <ReactEcharts option={this.getOption()} />\n        </Card>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {Button, Row, Col} from 'antd'\nimport {connect} from 'react-redux'\n\nimport {setHeadTitle} from '../../redux/actions'\nimport './not-found.less'\n\n/*\n前台404页面\n */\nclass NotFound extends Component {\n\n  goHome = () => {\n    this.props.setHeadTitle('首页')\n    this.props.history.replace('/home')\n  }\n\n  render() {\n    return (\n\n      <Row className='not-found'>\n        <Col span={12} className='left'></Col>\n        <Col span={12} className='right'>\n          <h1>404</h1>\n          <h2>抱歉，你访问的页面不存在</h2>\n          <div>\n            <Button type='primary' onClick={this.goHome}>\n              回到首页\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  {setHeadTitle}\n)(NotFound)","import './order.less'\nimport React, {Component} from 'react'\nimport {\n  Card,\n  Select,\n  Input,\n  Button,\n  Icon,\n  Table,\n  message,\n  Modal\n} from 'antd'\n\nimport LinkButton from '../../components/link-button'\nimport {reqOrders, reqSearchOrders,reqOrderDelivery,reqOrderEnd} from '../../api'\nimport {PAGE_SIZE} from '../../utils/constants'\nimport memoryUtils from \"../../utils/memoryUtils\";\n\nconst Option = Select.Option\n\n\nexport default class OrderHome extends Component {\n \n  state = {\n    total: 0, // 订单的总数量\n    orders: [], // 订单的数组\n    loading: false, // 是否正在加载中\n    searchContent: '', // 搜索的关键字内容\n    searchType: 'orderNo', // 根据哪个字段搜索\n  }\n\n\n  /*\n  初始化table的列的数组\n   */\n  initColumns = () => {\n    this.columns = [\n      {\n        width: 140,\n        title: '订单号',\n        dataIndex: 'orderNo',\n      },\n      {\n        width: 100,\n        title: '订单总价',\n        dataIndex: 'totalPrice',\n        render: (totalPrice) => '¥' + totalPrice/100 // 当前指定了对应的属性, 传入的是对应的属性值\n      },\n      {\n        width:110,\n        title: '订单状态',\n        dataIndex: 'orderStatusName',\n        // render:(orderStatus) => {\n        //   switch(orderStatus){\n        //     case 0:return \"用户已取消\";\n        //     case 10:return \"未付款\";\n        //     case 20:return \"已支付\";\n        //     case 30:return \"已发货\";\n        //     case 40:return \"交易完成\";\n        //   }\n        // }\n      },\n      {\n        width:100,\n        title: '支付方式',\n        dataIndex: 'paymentType',\n        render:(paymentType) => paymentType==1?\"在线支付\":\"货到付款\"\n      },\n      {\n        width:150,\n        title: '创建时间',\n        dataIndex: 'createTime',\n        render:(createTime) => createTime.substring(0,10)+\" \"+createTime.substring(11,20)\n      },\n      {\n        width:100,\n        title: '收货人',\n        dataIndex: 'receiverName'\n      },\n      {\n        width:140,\n        title: '收货人手机号',\n        dataIndex: 'receiverMobile'\n      },\n      {\n        title: '收货地址',\n        dataIndex: 'receiverAddress'\n      },\n      {\n        width: 100,\n        title: '操作',\n        render: (order) => {\n          return (\n            <span>\n              {/*将order对象使用state传递给目标路由组件*/}\n              <LinkButton onClick={() => this.showDetail(order)}>详情</LinkButton>\n              <LinkButton onClick={() => this.showDelivery(order)}>发货</LinkButton>\n              <LinkButton onClick={() => this.showEnd(order)}>完结</LinkButton>\n            </span>\n          )\n        }\n      },\n    ];\n  }\n\n\n  /*\n  获取指定页码的列表数据显示\n   */\n  getOrders = async (pageNum) => {\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\n    this.setState({loading: true}) // 显示loading\n\n    const {searchContent, searchType} = this.state\n    // 如果搜索关键字有值, 说明我们要做搜索分页\n    let result\n    if (searchContent) {\n      result = await reqSearchOrders({pageNum, pageSize: PAGE_SIZE, searchContent, searchType})\n    } else { // 一般分页请求\n      result = await reqOrders(pageNum, PAGE_SIZE)\n    }\n\n    this.setState({loading: false}) // 隐藏loading\n    if (result.status === 10000) {\n      // 取出分页数据, 更新状态, 显示分页列表\n      const {total, list} = result.data\n      //console.log(total,list)\n      this.setState({\n        total,\n        orders: list\n      })\n    }\n  }\n\n\n  /**\n   *  显示订单详情界面\n   */\n  showDetail = (order) => {\n    // 缓存order对象 ==> 给detail组件使用\n    memoryUtils.order = order\n    this.props.history.push(\n      '/order/detail'\n    )\n  }\n\n  /**\n   * 订单发货\n   */\n  showDelivery = (order) =>{\n    Modal.confirm({\n      title: `确认发货${order.orderNo}吗?`,\n      onOk: async () => {\n        let orderNo =parseInt(order.orderNo);\n        const result = await reqOrderDelivery(orderNo)\n        if (result.status === 10000) {\n          message.success('发货成功!')\n          this.getOrders(1)\n        }\n      }\n    })\n  }\n\n   /**\n   * 订单完结\n   */\n    showEnd = (order) =>{\n      Modal.confirm({\n        title: `确认完结${order.orderNo}吗?`,\n        onOk: async () => {\n          let orderNo =parseInt(order.orderNo);\n          const result = await reqOrderEnd(orderNo)\n          if (result.status === 10000) {\n            message.success('订单交易完成!')\n            this.getOrders(1)\n          }\n        }\n      })\n    }\n\n\n  componentWillMount () {\n    this.initColumns()\n  }\n \n  componentDidMount () {\n    this.getOrders(1)\n  }\n\n render() {\n\n    // 取出状态数据\n    const {orders, total, loading, searchType, searchContent} = this.state\n\n\n\n    const title = (\n      <span>\n        <Select\n          value= {searchType}\n          style={{width: 150}}\n          onChange={value => this.setState({searchType:value})}\n        >\n          <Option value='orderNo'>按订单号搜索</Option>\n          <Option value='receiverName'>按收货人搜索</Option>\n        </Select>\n        <Input\n          placeholder='关键字'\n          style={{width: 150, margin: '0 15px'}}\n          value={searchContent}\n          onChange={event => this.setState({searchContent:event.target.value})}\n        />\n        <Button type='primary' onClick={() => this.getOrders(1)}>搜索</Button>\n      </span>\n    )\n\n    return (\n      <Card title={title}>\n        <Table\n          bordered\n          rowKey='id'\n          loading={loading}\n          dataSource={orders}\n          columns={this.columns}\n          pagination={{\n            current: this.pageNum,\n            total,\n            defaultPageSize: PAGE_SIZE,\n            showQuickJumper: true,\n            onChange: this.getOrders\n          }}\n        />\n      </Card>\n    )\n  }\n}\n\n ","import React, { Component } from 'react'\nimport {  Card,Row, Col, Table, message,Icon } from 'antd';\nimport { reqOrderDetail } from '../../api'\nimport './order-detail.less'\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport LinkButton from '../../components/link-button'\n/*\nOrder的详情子路由组件\n */\nexport default class OrderDetail extends Component {\n\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: '商品图片',\n      dataIndex: 'productImg',\n      render: (text) => {\n        return (\n          <img src={text} alt=\"商品图片\" />\n        )\n      }\n    }, {\n      title: '商品信息',\n      dataIndex: 'productName',\n    }, {\n      title: '单价',\n      dataIndex: 'unitPrice',\n      render:(unitPrice) => \"￥\"+unitPrice/100\n    }, {\n      title: '数量',\n      dataIndex: 'quantity',\n    }, {\n      title: '合计',\n      dataIndex: 'totalPrice',\n      render:(totalPrice) => \"￥\"+totalPrice/100\n    }];\n    this.state = {\n      orderInfo: {},\n      productList: [],\n    }\n  }\n\n  //查询订单详情\n  _requestOrderDetail = () => {\n    //console.log(memoryUtils.order.orderNo)\n    let orderNo = memoryUtils.order.orderNo\n    let params = orderNo\n    reqOrderDetail(params).then(res => {\n      let { status, msg, data } = res;\n      if (status !== 10000) {\n        message.error(msg);\n        return;\n      }\n      let productList = Array.from(data.orderItemVOList).map((item) => {\n        item['productImg'] = `${item.productImg}`  //${data['imageHost']}${item.productImg}\n        return item;\n      });\n\n      this.setState({\n        orderInfo: data,\n        productList: productList\n      })\n    })\n  }\n\n  componentDidMount() {\n   // const { orderNo, createTime, receiverName,receiverMobile,receiverAddress,orderStatus, paymentType, totalPrice,orderItemVOList } = memoryUtils.order\n    this._requestOrderDetail();\n  }\n  /*\n 在卸载之前清除保存的数据\n */\n  componentWillUnmount() {\n    memoryUtils.order = {}\n  }\n\n  render() {\n    const title = (\n      <span>\n        <LinkButton>\n          <Icon\n            type='arrow-left'\n            style={{marginRight: 10, fontSize: 20}}\n            onClick={() => this.props.history.goBack()}\n          />\n        </LinkButton>\n\n        <span>订单详情</span>\n      </span>\n    )\n    \n    return (\n      <Card title={title} className='order-detail'>\n      <article className=\"order-detail\">\n        <Row>\n          <Col className='title' span={6}>订单号：</Col>\n          <Col className='info' span={18}>{this.state.orderInfo.orderNo}</Col>\n        </Row>\n        <Row>\n          <Col className='title' span={6}>创建时间：</Col>\n          <Col className='info' span={18}>{this.state.orderInfo.createTime}</Col>\n        </Row>\n        <Row>\n          <Col className='title' span={6}>收货人信息：</Col>\n          <Col className='info' span={18}>\n            {this.state.orderInfo.receiverName}，\n            {this.state.orderInfo.receiverMobile}，\n            {this.state.orderInfo.receiverAddress}\n          </Col>\n        </Row>\n        <Row>\n          <Col className='title' span={6}>订单状态</Col>\n          <Col className='info' span={18}>\n            {this.state.orderInfo.orderStatusName}\n          </Col>\n        </Row>\n        <Row>\n          <Col className='title' span={6}>支付方式</Col>\n          <Col className='info' span={18}>{this.state.orderInfo.paymentType == 1 ? \"在线支付\" : \"货到付款\"}</Col>\n        </Row>\n        <Row>\n          <Col className='title' span={6}>订单金额</Col>\n          <Col className='info' span={18}>￥{this.state.orderInfo.totalPrice/100}</Col>\n        </Row>\n        <Row>\n          <Col className='title' span={6}>商品列表</Col>\n          <Col className='info' span={18}>\n            <Table\n              columns={this.columns} rowKey='productId'\n              dataSource={this.state.productList}\n              pagination={false}\n            />\n          </Col>\n        </Row>\n      </article>\n      </Card>\n    )\n  }\n\n}","import React, {Component} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport OrderHome from './home'\nimport OrderDetail from './detail'\n\nimport './order.less'\n\n/*\n商品路由\n */\nexport default class Order extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/order' component={OrderHome} exact/> {/*路径完全匹配*/}\n        <Route path='/order/detail' component={OrderDetail}/>\n        <Redirect to='/order'/>\n      </Switch>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport { connect } from 'react-redux'\n\nimport LeftNav from '../../components/left-nav'\nimport Header from '../../components/header'\nimport Home from '../home/home'\nimport Category from '../category/category'\nimport Product from '../product/product'\nimport Bar from '../charts/bar'\nimport Line from '../charts/line'\nimport Pie from '../charts/pie'\nimport NotFound from '../not-found/not-found'\nimport Order from '../order/order'\nimport beianImg from '../../assets/images/beian.png'\n\nconst { Footer, Sider, Content } = Layout\n\n/*\n后台管理的路由组件\n */\nclass Admin extends Component {\n  render() {\n    const user = this.props.user\n    // 如果内存没有存储user ==> 当前没有登陆\n    if (!user || !user.id) {\n      // 自动跳转到登陆(在render()中)\n      return <Redirect to='/login' />\n    }\n    return (\n\n      <Layout style={{ minHeight: '100%' }}>\n        <Sider>\n          <LeftNav />\n        </Sider>\n        <Layout>\n          <Header>Header</Header>\n          <Content style={{ marginTop: 20, backgroundColor: '#fff' }}>\n            <Switch>\n              <Redirect exact from='/' to='/home' />\n              <Route path='/home' component={Home} />\n              <Route path='/category' component={Category} />\n              <Route path='/product' component={Product} />\n              <Route path='/charts/bar' component={Bar} />\n              <Route path='/charts/line' component={Line} />\n              <Route path='/charts/pie' component={Pie} />\n              <Route path=\"/order\" component={Order} />\n              <Route component={NotFound} /> {/*上面没有一个匹配, 直接显示*/}\n            </Switch>\n          </Content>\n         \n          <Footer style={{ textAlign: 'center', color: 'grey' }}>©2022 liuleinet • Powered by 2022 刘磊<br/>  <a href=\"https://beian.miit.gov.cn\" style={{color: 'grey'}}>赣ICP备2022001959号-1</a>  <a href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=36050202000303\" style={{display:'inline-block',color: 'grey',height:'20px','line-height':'20px'}}><img src={beianImg} style={{float:'left'}} />赣公网安备 36050202000303号</a><br/>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\n        </Layout>\n      </Layout>\n      \n    )\n  }\n}\n\n\nexport default connect(\n  state => ({ user: state.user }),\n  {}\n)(Admin)","import React, {Component} from 'react'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\n\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\n\n/*\n应用的根组件\n */\nexport default class App extends Component {\n  render () {\n    return (\n      <HashRouter>\n        <Switch> {/*只匹配其中一个*/}\n          <Route path='/login' component={Login}></Route>\n          <Route path='/' component={Admin}></Route>\n        </Switch>\n      </HashRouter>\n    )\n  }\n}","/*\n入口js\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\n\nimport store from './redux/store'\nimport App from './App'\n\n// 将App组件标签渲染到index页面的div上\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.df722368.png\";","module.exports = __webpack_public_path__ + \"static/media/beian.d0289dc0.png\";"],"sourceRoot":""}